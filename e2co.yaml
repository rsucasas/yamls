swagger: '2.0'
info:
  version: 0.1.1
  title: E2CO REST API
  description: E2CO REST API is responsible for the deployment of applications in Edge and Cloud clusters / devices
schemes:
- http
host: localhost:8333
basePath: "/api/v1"

tags:
- name: status
  description: 'Information about the status and configuration of E2CO'
- name: apps
  description: 'E2CO applications: creation, deletion and management of applications (and serverless functions) in Edge / Cloud orchestrators: K8s, microK8s, K3s, Docker, Docker Swarm etc.'
- name: ime
  description: 'Infrastructure management operations: add and remove orchestrators managed by the E2CO tool'  
- name: connectors
  description: 'E2CO connectors with external tools'
  
paths:
  "/":
    get:
      tags:
      - status
      description: status of the rest api server
      summary: Get the status of the rest api server
      operationId: getStatus
      produces:
      - application/json
      responses:
        '200':
          description: REST API server information
  "/version":
    get:
      tags:
      - status
      description: Returns the current E2CO version
      summary: Get the current E2CO version
      operationId: getVersion
      produces:
      - application/json
      responses:
        '200':
          description: E2CO version
          
# APPS ##########################

  "/apps":
    get:
      tags:
      - apps
      description: Returns a list of all the current E2CO applications (from all infrastructures
        / clusters) managed by E2CO
      summary: Returns a list of all the current E2CO apps (from all infrastructures /
        clusters)
      operationId: getAllE2COApps
      produces:
      - application/json
      responses:
        '200':
          description: E2CO apps
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
    post:
      tags:
      - apps
      description: Creates a new E2CO Application
      summary: Creates a new E2CO Application
      operationId: createE2COTask
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: app
        required: true
        schema:
          "$ref": "#/definitions/E2coApp"
      responses:
        '200':
          description: App Created
          schema:
            "$ref": "#/definitions/E2coApp"
        '400':
          description: Bad Request
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co

  "/apps/{id}":
    get:
      tags:
      - apps
      description: Returns an E2CO application identified by an ID {id}
      summary: Returns an E2CO application
      operationId: getE2COTask
      produces:
      - application/json
      parameters:
      - name: id
        description: application identifier
        in: path
        required: true
        type: string
      responses:
        '200':
          description: App get
          schema:
            "$ref": "#/definitions/E2coApp"
        '400':
          description: Bad Request
        '404':
          description: Task Not Found
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
    put:
      tags:
      - apps
      description: Migrates / scales / updates an E2CO application
      summary: Migrates / scales / updates an E2CO application
      operationId: UpdateE2COTask
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        description: application ID
        in: path
        required: true
        type: string
      - in: body
        name: app
        required: true
        schema:
          "$ref": "#/definitions/E2coApp"
      responses:
        '200':
          description: App updated
          schema:
            "$ref": "#/definitions/E2coApp"
        '400':
          description: Bad Request
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
    delete:
      tags:
      - apps
      description: Deletes an E2CO app
      summary: Deletes an E2CO app
      operationId: deleteE2COTask
      produces:
      - application/json
      parameters:
      - name: id
        description: application ID
        in: path
        required: true
        type: string
      responses:
        '200':
          description: App get
          schema:
            "$ref": "#/definitions/E2coApp"
        '400':
          description: Bad Request
        '404':
          description: App Not Found
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
  "/apps/{id}/all":
    get:
      tags:
      - apps
      description: Gets a E2CO application, including deployment info
      summary: Gets a E2CO application, including deployment info
      operationId: getE2COTaskFullInfo
      produces:
      - application/json
      parameters:
      - name: id
        description: application ID
        in: path
        required: true
        type: string
      responses:
        '200':
          description: App get all
          schema:
            "$ref": "#/definitions/E2coApp"
        '400':
          description: Bad Request
        '404':
          description: App Not Found
          
# IME ##########################

  "/ime/e2co-apps":
    get:
      tags:
      - ime
      description: Returns all infrastructures / orchestrators and the applications
      summary: Returns all orchestrators and applications
      operationId: getAllOrchestratorsApps
      produces:
      - application/json
      responses:
        '200':
          description: E2CO orchestrators
          schema:
            "$ref": "#/definitions/Orchestrator"
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co

  "/ime/e2co":
    get:
      tags:
      - ime
      description: Returns all infrastructures / orchestrators
      summary: Returns all orchestrators
      operationId: getAllOrchestrators
      produces:
      - application/json
      responses:
        '200':
          description: E2CO orchestrators
          schema:
            "$ref": "#/definitions/Orchestrator"
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
    post:
      tags:
      - ime
      description: add a new existing orchestrator to managed orchestrators
      summary: add a new existing orchestrator to managed orchestrators
      operationId: addOrchestrator
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: infr
        required: true
        schema:
          "$ref": "#/definitions/Orchestrator"
      responses:
        '200':
          description: Orchestrator created / added
          schema:
            "$ref": "#/definitions/Orchestrator"
        '400':
          description: Bad Request
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
  "/ime/e2co/{id}":
    get:
      tags:
      - ime
      description: Returns a Orchestrator
      summary: Returns a Orchestrator
      operationId: getOrchestrator
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: id of the Orchestrator
        required: true
        type: string
      responses:
        '200':
          description: E2CO Orchestrator
          schema:
            "$ref": "#/definitions/Orchestrator"
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
    put:
      tags:
      - ime
      description: Updates an Orchestrator
      summary: Updates an Orchestrator
      operationId: updateOrchestrator
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: id of the Orchestrator
        required: true
        type: string
      - in: body
        name: infr
        required: true
        schema:
          "$ref": "#/definitions/Orchestrator"
      responses:
        '200':
          description: Orchestrator updated
          schema:
            "$ref": "#/definitions/Orchestrator"
        '400':
          description: Bad Request
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
    delete:
      tags:
      - ime
      description: Deletes an Orchestrator
      summary: Deletes an Orchestrator
      operationId: deleteOrchestrator
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: id of the Orchestrator
        required: true
        type: string
      responses:
        '200':
          description: Orchestrator deleted
          schema:
            "$ref": "#/definitions/Orchestrator"
        '400':
          description: Bad Request
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
     
# SLA ##########################

  "/sla/tasks/{id}/guarantee/{guarantee}":
    post:
      tags:
      - connectors
      description: Process SLALite violations
      summary: Process SLALite violations
      operationId: processSLAViolation
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: id of the application / agreement client id
        required: true
        type: string
      - in: path
        name: guarantee
        description: guarantee name
        required: true
        type: string
      - in: body
        name: violation
        required: true
        schema:
          "$ref": "#/definitions/Violation"
      responses:
        '200':
          description: Violation processed
          schema:
            "$ref": "#/definitions/Violation"
        '400':
          description: Bad Request
      security:
      - e2co_auth:
        - write:e2co
        - read:e2co
        
        
securityDefinitions:
  e2co_auth:
    type: oauth2
    authorizationUrl: https://e2co/oauth/authorize
    flow: implicit
    scopes:
      write:e2co: modify tasks and docks
      read:e2co: read tasks and docks
  api_key:
    type: apiKey
    name: api_key
    in: header
    
    
definitions:
              
  Orchestrator:
    description: A representation of a E2CO orchestrator / infrastructure
    type: object
    properties:
      id:
        type: string
        example: orchID
      description:
        type: string
        example: orchestrator description
      type:
        type: string
        example: microk8s
      so:
        type: string
        example: ubuntu18
      defaultNamespace:
        type: string
        example: pledger
      ip:
        type: string
        example: 192.168.1.12
      port:
        type: integer
        example: 22
      user:
        type: string
        example: user_name
      password:
        type: string
        example: user_password
      kubernetesEndPoint:
        type: string
        example: http://192.168.7.28:8001
      openshiftEndPoint:
        type: string
        example: https://192.168.7.28:8443
      connectionToken:
        type: string
        example: eyJhbGciOiJSUzI1NiIsImt...pZCI6IiJ9.eyJpc3MiOiJrdW
      slaLiteEndPoint:
        type: string
        example: http://slalite.192.168.7.28.xip.io
      prometheusPushgatewayEndPoint:
        type: string
        example: http://pushgateway.192.168.7.28.xip.io
      prometheusEndPoint:
        type: string
        example: http://192.168.7.28.xip.io:9090
          
                  
  E2coApp:
    description: A representation of a E2CO application (version 0.1)
    type: object
    properties:
      name:
        type: string
        example: nginx-app
      namespace:
        type: string
        example: default
      idE2cOrchestrator:
        type: string
        example: maincluster
      qos:
        type: array
        items:
          type: object
          properties:
            qosid:
              type: string
              example: KubeletTooManyPods
            description:
              type: string
              example: scale down task if cluster pods > 50
      replicas:
        type: integer
        example: 2
      containers:
        type: array
        items:
          type: object
          required:
          - name image ports
          properties:
            name:
              type: string
              example: nginx
            image:
              type: string
              example: nginx
            ports:
              type: array
              items:
                type: object
                properties:
                  containerPort:
                    type: integer
                    example: 80
                  hostPort:
                    type: integer
                    example: 80
                  protocol:
                    type: string
                    example: tcp
            volumes:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: name
                  mounthPath:
                    type: string
                    example: mounthPath
            environment:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: TEST_VALUE
                  value:
                    type: string
                    example: 1.2.3
                    
  E2coFunction:
    description: A representation of a E2CO Function
    type: object
    required:
    - name qos containers
    properties:
      name:
        type: string
        example: helloworld
      dock:
        type: string
        example: default
      cluster:
        type: string
        example: maincluster
      type:
        type: string
        example: function
      runtime:
        type: string
        example: python2.7
      timeout:
        type: string
        example: '180'
      handler:
        type: string
        example: helloget.foo
      functionType:
        type: string
        example: text
      function:
        type: string
        example: |
          def foo(event, context):
              return "hello world"
              
  Violation:
    description: A representation of a E2CO - SLA-Manager violation
    type: object
    properties:
      idSLA:
        type: string
        example: slaID
      idOrchestrator:
        type: string
        example: orchID
      idApp:
        type: string
        example: appID
      violation:
        type: string
        example: guarantee1
      violationType:
        type: string
        example: Severe
      description:
        type: string
        example: value expected, value monitored
      date:
        type: string
        example: 2024-01-01T00:00:00Z

  Operation:
    description: A representation of a E2CO application operation
    type: object
    properties:
      idApp:
        type: string
        example: idApp
      idOrchestrator:
        type: string
        example: orchID
      violation:
        type: string
        example: guarantee1
      violationType:
        type: string
        example: Severe
      description:
        type: string
        example: value expected, value monitored
      date:
        type: string
        example: 2024-01-01T00:00:00Z
  
externalDocs:
  description: Find out more about the Pledger project
  url: http://www.pledger-project.eu/
